@startuml "MindHub"

' =========================
' === Pacote Usuários ===
' =========================
package "Users" {
  abstract class User {
    #id: UUID
    #name: str
    #email: str
    #password_hash: str
    #cpf: str
    #birth_date: date
    #gender: GenderEnum
    #phone_number: str
    #profile_picture: FileData
    #state: State
    #city: City
  }

  class Patient {
    +searchPsychologists(filters: Filter): List<Psychologist>
    +schedule(appointmentInfo: AppointmentDTO): Appointment
    +cancelAppointment(appointmentId: UUID): bool
    +rescheduleAppointment(appointmentId: UUID, newTime: datetime): Appointment
  }

  class Psychologist {
    -crp: str
    -price_per_session: Decimal
    -description: str
    -specialties: List<Specialty>
    -approaches: List<ApproachEnum>
    -availability: List<Availability>
    -audiences: List<AudienceEnum>
    +setAvailability(d: Availability): void
    +generateGoogleMeet(appointment: Appointment): URL
    +writeArticle(): Article
  }

  User <|-- Patient
  User <|-- Psychologist
}

' =========================
' === Infraestrutura ===
' =========================
package "Infra" {
  class FileData {
    +key: str
    +source: str
    +file_name: str
    +content_type: str
    +size: int
  }

  class State {
    +id: UUID
    +name: str
    +abbreviation: str
  }

  class City {
    +id: UUID
    +name: str
    +state: State
  }

  State "1" *-- "0..*" City : contains
  City "1" o-- "0..*" User : has
  State "1" o-- "0..*" User : has
}

' =========================
' === Login Strategy ===
' =========================
package "Auth" {
  interface LoginStrategy {
    +authenticate(credentials): User  
  }

  class EmailLogin {
    +authenticate(credentials): User
  }

  class GoogleLogin {
    +authenticate(oauthToken): User
  }

  LoginStrategy <|.. EmailLogin
  LoginStrategy <|.. GoogleLogin
}

' =========================
' === Especialidades ===
' =========================
package "Specialties" {
  class Specialty {
    -id: UUID
    -name: str
    -description: str
  }

  class Filter {
    +availability: bool
    +price_range_min: Decimal
    +price_range_max: Decimal
    +specialties: List<UUID>
    +gender: GenderEnum
    +approaches: List<str>
    +date_range_start: date
    +date_range_end: date
  }

  Psychologist "0..*" *-- "1..*" Specialty : has
}

' =========================
' === Disponibilidade ===
' =========================
package "Availability" {
  class Availability {
    +id: UUID
    +date: datetime
    +appointment_id: UUID
    +available: bool
  }

  Psychologist "1" *-- "0..*" Availability : defines
}

' =========================
' === Consulta / Pagamento ===
' =========================
package "Appointments" {
  class Appointment {
    +id: UUID
    +date: datetime
    +status: AppointmentStatusEnum
    +duration_min: int
    +createPIX(): PaymentPIX
    +confirm(): void
    +cancel(): void
  }

  class PaymentPIX {
    +id: UUID
    +value: Decimal
    +qr_code: String
    +status: PaymentStatusEnum
    +validatePayment(): bool
  }

  class Session {
    +token: str
    +expires_at: datetime
  }

  Appointment "1" *-- "0..1" PaymentPIX : generates
  Patient "1" o-- "0..*" Appointment : schedules
  Psychologist "1" o-- "0..*" Appointment : receives
  User "1" o-- "0..*" Session : has
}

' =========================
' === Notificações ===
' =========================
package "Notifications" {
  class Notification {
    +id: UUID
    +type: NotificationTypeEnum
    +content: str
    +send(): bool
  }
}

' =========================
' === Blog / Artigos ===
' =========================
package "Articles" {
  class Article {
    +id: UUID
    +title: str
    +summary: str
    +content_md: text
    +authorId: UUID
    +status: ArticleStatusEnum
    +publish(): void
  }

  class Tag {
    +id: UUID
    +name: str
  }

  Article "1" o-- "0..*" Tag : has
  Psychologist "0..1" o-- "0..*" Article : writes
}

' =========================
' === Enums ===
' =========================
enum GenderEnum {
  MALE
  FEMALE
  NON_BINARY
  PREFER_NOT_TO_SAY
}

enum AudienceEnum {
  CHILDREN
  ADOLESCENT
  ADULT
  ELDERLY
}

enum ApproachEnum {
  BEHAVIORISM
  GESTALT
  PSYCHOANALYSIS | FREUD
  COGNITIVE BEHAVIORAL THERAPY
  FAMILY THERAPY
  ...
}

enum AppointmentStatusEnum {
  SCHEDULED
  CONFIRMED
  CANCELED
  COMPLETED
}

enum PaymentStatusEnum {
  PENDING
  PAID
  FAILED
}

enum DayOfWeekEnum {
  MONDAY
  TUESDAY
  ...
  SUNDAY
}

enum NotificationTypeEnum {
  EMAIL
  SMS
  PUSH
}

enum ArticleStatusEnum {
  DRAFT
  SUBMITTED
  PUBLISHED
}

' =========================
' === Relacionamentos Enums ===
' =========================
User --> GenderEnum
Patient --> Appointment
Psychologist --> AudienceEnum
Psychologist --> ApproachEnum
Psychologist --> Specialty
Psychologist --> Availability
Availability --> DayOfWeekEnum
Appointment --> AppointmentStatusEnum
PaymentPIX --> PaymentStatusEnum
Notification --> NotificationTypeEnum
Article --> ArticleStatusEnum

@enduml
